<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elangzhi.fish.dao.GradeMapper" >
  <resultMap id="BaseResultMap" type="com.elangzhi.fish.model.Grade" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="person_id" property="personId" jdbcType="BIGINT" />
    <result column="game_id" property="gameId" jdbcType="BIGINT" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="chang" property="chang" jdbcType="INTEGER" />
    <result column="qu" property="qu" jdbcType="INTEGER" />
    <result column="room" property="room" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="DOUBLE" />
    <result column="grade" property="grade" jdbcType="DOUBLE" />
    <result column="ranking" property="ranking" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, person_id, game_id, `time`, chang, qu,room, `number`, weight, grade, ranking
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from grade
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from grade
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.elangzhi.fish.model.Grade" >
    insert into grade (id, person_id, game_id, 
      `time`, chang, qu, room,
      `number`, weight, grade, 
      ranking)
    values (#{id,jdbcType=BIGINT}, #{personId,jdbcType=BIGINT}, #{gameId,jdbcType=BIGINT}, 
      #{time,jdbcType=TIMESTAMP}, #{chang,jdbcType=INTEGER}, #{qu,jdbcType=INTEGER}, #{room,jdbcType=INTEGER},
      #{number,jdbcType=INTEGER}, #{weight,jdbcType=DOUBLE}, #{grade,jdbcType=DOUBLE},
      #{ranking,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.elangzhi.fish.model.Grade" >
    insert into grade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="personId != null" >
        person_id,
      </if>
      <if test="gameId != null" >
        game_id,
      </if>
      <if test="time != null" >
        `time`,
      </if>
      <if test="chang != null" >
        chang,
      </if>
      <if test="qu != null" >
        qu,
      </if>
      <if test="room != null" >
        room,
      </if>
      <if test="number != null" >
        `number`,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="ranking != null" >
        ranking,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="personId != null" >
        #{personId,jdbcType=BIGINT},
      </if>
      <if test="gameId != null" >
        #{gameId,jdbcType=BIGINT},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="chang != null" >
        #{chang,jdbcType=INTEGER},
      </if>
      <if test="qu != null" >
        #{qu,jdbcType=INTEGER},
      </if>
      <if test="room != null" >
        #{room,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=DOUBLE},
      </if>
      <if test="ranking != null" >
        #{ranking,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.elangzhi.fish.model.Grade" >
    update grade
    <set >
      <if test="personId != null" >
        person_id = #{personId,jdbcType=BIGINT},
      </if>
      <if test="gameId != null" >
        game_id = #{gameId,jdbcType=BIGINT},
      </if>
      <if test="time != null" >
        `time` = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="chang != null" >
        chang = #{chang,jdbcType=INTEGER},
      </if>
      <if test="qu != null" >
        qu = #{qu,jdbcType=INTEGER},
      </if>
      <if test="room != null" >
        room = #{room,jdbcType=INTEGER},
      </if>

      <if test="number != null" >
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=DOUBLE},
      </if>
      <if test="ranking != null" >
        ranking = #{ranking,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elangzhi.fish.model.Grade" >
    update grade
    set person_id = #{personId,jdbcType=BIGINT},
      game_id = #{gameId,jdbcType=BIGINT},
      `time` = #{time,jdbcType=TIMESTAMP},
      chang = #{chang,jdbcType=INTEGER},
      qu = #{qu,jdbcType=INTEGER},
      room = #{room,jdbcType=INTEGER},
      `number` = #{number,jdbcType=INTEGER},
      weight = #{weight,jdbcType=DOUBLE},
      grade = #{grade,jdbcType=DOUBLE},
      ranking = #{ranking,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="findInfo1" resultMap="BaseResultMap">
    select a.*,b.`name` personName,b.number personNumber
    from grade a
    left join person b on a.person_id = b.id
    where 1=1
    and a.game_id = #{gameId,jdbcType=BIGINT}
    and a.chang = #{chang,jdbcType=INTEGER}
    <if test="qu != null" >
        and a.`qu` = #{qu,jdbcType=INTEGER}
    </if>
    order by a.number desc,a.weight desc,a.room
  </select>

  <select id="listByGame" resultMap="BaseResultMap">
    select a.*,b.`name` personName,b.number personNumber
    from grade a
    left join person b on a.person_id = b.id
    where a.game_id = #{id,jdbcType=BIGINT}
  </select>
  <select id="countQu" resultMap="BaseResultMap">
    select qu,count(id) quCount
    from grade
    where 1=1 and game_id = #{id,jdbcType=BIGINT} and chang=1
    group by qu
    order by quCount
  </select>
  <select id="findByGameChangPerson" resultMap="BaseResultMap">
    select *
    from grade
    where 1=1
    and game_id = #{gameId,jdbcType=BIGINT}
    and chang = #{chang,jdbcType=INTEGER}
    and person_id = #{personId,jdbcType=BIGINT}
  </select>

  <select id="gradeShow" resultType="com.elangzhi.fish.model.Grade">
    select a.*,b.`name` personName,b.number personNumber,(a.grade+a.ranking) defen
    from grade a
    left join person b on a.person_id = b.id
    where 1=1
    and a.game_id = #{gameId,jdbcType=BIGINT}
    <if test="chang != null" >
        and a.chang = #{chang,jdbcType=INTEGER}
        <if test="qu != null" >
            and a.`qu` = #{qu,jdbcType=INTEGER}
        </if>
    </if>
    <if test="chang == null" >

    </if>

    order by defen,a.room
  </select>

    <select id="groupShow" resultType="com.elangzhi.fish.model.Grade">
        select b.`group` personName,sum(a.number) number,sum(a.weight) weight,sum(a.grade) grade,
        sum(a.ranking) ranking,sum(a.grade)+sum(a.ranking) defen
        from grade a
        left join person b on a.person_id = b.id
        where 1=1
        and a.game_id = #{gameId,jdbcType=BIGINT}
        <if test="chang != null" >
            and a.chang = #{chang,jdbcType=INTEGER}
            <if test="qu != null" >
                and a.`qu` = #{qu,jdbcType=INTEGER}
            </if>
        </if>
        and b.`group` != ''
        group by b.`group`
        order by defen
    </select>


    <select id="zongfenShow" resultType="com.elangzhi.fish.model.Grade">
        select a.person_id personId,sum(a.ranking) ranking,sum(a.grade)+sum(a.ranking) defen,b.`name` personName,b.number personNumber
        from grade a
        left join person b on a.person_id = b.id
        where a.game_id = #{gameId,jdbcType=BIGINT}
        group by a.person_id
        order by defen
    </select>


    <select id="jifen" resultType="com.elangzhi.fish.model.Grade">
        select a.*,b.`name` personName,b.number personNumber
        from grade a
        left join person b on a.person_id = b.id
        where 1=1
        and a.game_id = #{gameId,jdbcType=BIGINT}
        <if test="chang != null" >
            and a.chang = #{chang,jdbcType=INTEGER}
        </if>
        order by a.number desc,a.weight desc,a.room
    </select>

    <select id="findByChangNumber" resultType="com.elangzhi.fish.model.Grade">
        select a.*
        from grade a
        left join person b on a.person_id = b.id
        where 1=1
        and a.game_id = #{gameId,jdbcType=BIGINT}
        and a.chang = #{chang,jdbcType=INTEGER}
        and b.number = #{personId,jdbcType=INTEGER}
    </select>


</mapper>